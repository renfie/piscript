###############################################################
#                    Authelia configuration
###############################################################

jwt_secret:  ganzgeheimeslangesPasswortmitvielenZeichenundZahlen
default_redirection_url: https://auth.blabla.de

## The theme to display: light, dark, grey, auto.
theme: 'dark'

server:
  host: 0.0.0.0
  port: 9091

log:
  level: debug

totp:
  issuer: authelia
  period: 30
  skew: 1

authentication_backend:
  file:
    path: /config/users_database.yml
    password:
      algorithm: argon2id
      iterations: 1
      salt_length: 16
      parallelism: 8
      memory: 128

access_control:
  default_policy: deny
  rules:
    # Rules applied to everyone
    - domain:
        - "dns.blabla.de"
        - "auth.blabla.de"
      policy: bypass
    - domain: syn.blabla.de
      policy: one_factor
    - domain: sys.blabla.de
      policy: two_factor

session:
  name: authelia_session
  expiration: 3600  # 1 Stunde
  inactivity: 300  # 5 Minuten
  domain: blabla.de  # root Domain angeben


regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
  local:
    path: /config/db.sqlite3
  encryption_key: ganzgeheimeslangesPasswortmitvielenZeichenundZahlen
notifier:
#  smtp:
#    username: bla@blabla.de
#    password: MailPasswort
#    host: smtp.mail.blabla.de
#    port: 587
#    sender: bla@blabla.de
#    subject: "[Authelia] {title}"
  filesystem:
    filename: /config/notification.txt

identity_providers:
  oidc:
    hmac_secret: ganzgeheimeslangesPasswortmitvielenZeichenundZahlen #-random long string (same as jwt_secret?)-
    issuer_private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      #RSA Key mit docker run --rm -u "$(id -u):$(id -g)" -v "$(pwd)":/config authelia/authelia:4.37.5 authelia crypto pair rsa generate --bits 4096 --directory /config
      -----END RSA PRIVATE KEY-----
    access_token_lifespan: 1h
    authorize_code_lifespan: 1m
    id_token_lifespan: 1h
    refresh_token_lifespan: 90m
    enable_client_debug_messages: false
    enforce_pkce: public_clients_only
    cors:
      endpoints:
        - authorization
        - token
        - revocation
        - introspection
      allowed_origins:
        - https://blabla.de
      allowed_origins_from_client_redirect_uris: false
    clients:
      - id: #Client-ID erzeugen mit tr -cd '[:alnum:]' < /dev/urandom | fold -w "64" | head -n 1
        description: Portainer
        secret: 'secret' #docker run --rm authelia/authelia:4.37.5 authelia crypto hash generate pbkdf2 --random --random.length 32 --random.charset alphanumeric
        sector_identifier: ''
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1m
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - https://portainer.blabla.de
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none
